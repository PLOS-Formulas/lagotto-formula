{% from "lagotto/map.jinja" import props with context %}

description "lagotto/sidekiq"

start on started and runlevel [2345]
stop on shutdown

respawn
respawn limit 5 15

setuid lagotto
setgid lagotto

# TERM is sent by sidekiqctl when stopping sidekiq. Without declaring these as
# normal exit codes, it just respawns.
normal exit 0 TERM

# TODO - disabled because spawns a new instance of sidekiq.
# USR1 tells Sidekiq it will be shutting down at some point in the near future.
# It will stop accepting new work but continue working on current messages.
# reload signal USR1

# Upstart waits 5 seconds by default to kill the a process. Increase timeout to
# give sidekiq process enough time to exit.
kill timeout 15

env HOME=/home/lagotto
env ALM_ROOT={{ props.get('app_root') }}

instance 0

{% from 'lib/environment.sls' import environment %}
{% set sidekiq_server = props.get('sidekiq_server', 'None') %}

{% if grains['fqdn'] == sidekiq_server %}

script
exec /bin/bash << EOT
  if [ -d $ALM_ROOT/current ]; then
    cd $ALM_ROOT/current && chruby-exec 2.2.2 -- bundle exec sidekiq -i 0 -e {{ props.get('rails_env') }}
  else
    echo "$ALM_ROOT/current/ doesn't exist. Sidekiq not started."
  fi
EOT
end script

{% else %}

script
exec /bin/bash << EOT
  echo "Sidekiq disabled on this node."
EOT
end script

{% endif %}
